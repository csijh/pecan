// A partial C11 parser, assuming the source has been pre-processed and scanned.
// This version is a first prototype illustrating external definitions only.

// ---------- External definitions (C11 standard A.2.4) -----------------------

translation-unit = @0list external-declaration+ ``

// Combine declarations and function definitions to avoid lookahead
external-declaration =
    static_assert-declaration @1declaration /
    declaration-specifiers (
        `;` @1declaration /
        declarator (
            (`=` initializer)? (`,` init-declarator)* `;` @1declaration /
            declaration-list? compound-statement @1definition
        )
    )

declaration-list = declaration+

// ---------- Temporary definitions -------------------------------------------

declaration = declaration-specifiers init-declarator-list? `;`
declaration-specifiers = `int`
declarator = `id` (`(` `)`)?
initializer = `init`
init-declarator-list = init-declarator (`,` init-declarator)*
init-declarator = `initd`
compound-statement = `{` `}`
static_assert-declaration = `_Static_assert`
==========
int;
----------
list
declaration
==========
int id;
----------
list
declaration
==========
int id();
----------
list
declaration
==========
int id() {}
----------
list
definition
