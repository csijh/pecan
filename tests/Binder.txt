-- One rule
x = "a"
..........
List x = "a"...
  Rule x = "a"
    Id x
    Char "a"
  Empty
==========
-- One action
x = "x" @1act
..........
List x = "x" @1act...
  Rule x = "x" @1act
    Id x
    And "x" @1act
      Char "x"
      Act @1act
  Empty
==========
-- A splitter
x = <abc> "y" / "z"
..........
List x = <abc> "y" / "z"...
  Rule x = <abc> "y" / "z"
    Id x
    Or <abc> "y" / "z"
      And <abc> "y"
        Split <abc>
        Char "y"
      Char "z"
  Empty
==========
-- A tag
x = %t
..........
List x = %t...
  Rule x = %t
    Id x
    Tag %t
  Empty
==========
-- Some brackets
exp = (exp) END
END = 10
..........
List exp = (exp) END...
  Rule exp = (exp) END
    Id exp
    And (exp) END
      Id exp
      Id END
  Rule END = 10
    Id END
    Code 10
  Empty
==========
-- Set with duplicate character
s = 'abcdefcghi'
..........
Error in tests/Binder.txt, line 59: set contains duplicate character
s = 'abcdefcghi'
    ^^^^^^^^^^^^
==========
-- Number too big
m = 1114111
n = 1114112
..........
Error in tests/Binder.txt, line 67: code too big
n = 1114112
    ^^^^^^^
==========
-- Number too big
m = 010ffff
n = 0110000
..........
Error in tests/Binder.txt, line 75: code too big
n = 0110000
    ^^^^^^^
==========
-- Unicode, 195101 = last letter.
char = "\195101"
x = "x"
..........
List char = "\195101"...
  Rule char = "\195101"
    Id char
    Char "\195101"
  Rule x = "x"
    Id x
    Char "x"
  Empty
==========
-- Bad range
s = 'ab..c'
..........
Error in tests/Binder.txt, line 95: set contains duplicate character
s = 'ab..c'
    ^^^^^^^
==========
-- Bad range
s = 'a..bc'
..........
Error in tests/Binder.txt, line 102: expecting quote
s = 'a..bc'
         ^
==========
-- Bad range
s = '..a'
..........
Error in tests/Binder.txt, line 109: set contains duplicate character
s = '..a'
    ^^^^^
==========
-- Bad range
s = 'a..'
..........
Error in tests/Binder.txt, line 116:
s = 'a..'
        ^
==========
-- Bad range
s = 'b..a'
..........
Error in tests/Binder.txt, line 123: empty range
s = 'b..a'
    ^^^^^^
==========
-- Bad range
s = 33..32
..........
Error in tests/Binder.txt, line 130: empty range
s = 33..32
    ^^^^^^
==========
-- Just OK range
s = 33..33
..........
List s = 33..33...
  Rule s = 33..33
    Id s
    Codes 33..33
  Empty
==========
-- Ranges with three dots
s1 = '.../'
s2 = '-...'
s3 = '....'
..........
List s1 = '.../'...
  Rule s1 = '.../'
    Id s1
    Range '.../'
  Rule s2 = '-...'
    Id s2
    Range '-...'
  Rule s3 = '....'
    Id s3
    Range '....'
  Empty
==========
-- Name clash
x = @2add @3add
..........
Error in tests/Binder.txt, line 163: clashes with @2add
x = @2add @3add
          ^^^^^
==========
-- Complete scanner/parser grammar for sums
exp = term ("+" term @2add / "-" term @2sub)* <>
term = factor ("*" factor @2mul / "/" factor @2div)*
factor = primary ("^" factor @2pow)?
primary = number / "(" exp ")"
number = digit+ @number
digit = '0123456789'
..........
List exp = term ("+" term @2add / "-" term @2sub)* <>...
  Rule exp = term ("+" term @2add / "-" term @2sub)* <>
    Id exp
    And term ("+" term @2add / "-" term @2sub)* <>
      Id term
      Any ("+" term @2add / "-" term @2sub)*
        Or "+" term @2add / "-" term @2sub
          And "+" term @2add
            Char "+"
            Id term
            Act @2add
          And "-" term @2sub
            Char "-"
            Id term
            Act @2sub
      Eot <>
  Rule term = factor ("*" factor @2mul / "/" factor @2div)*
    Id term
    And factor ("*" factor @2mul / "/" factor @2div)*
      Id factor
      Any ("*" factor @2mul / "/" factor @2div)*
        Or "*" factor @2mul / "/" factor @2div
          And "*" factor @2mul
            Char "*"
            Id factor
            Act @2mul
          And "/" factor @2div
            Char "/"
            Id factor
            Act @2div
  Rule factor = primary ("^" factor @2pow)?
    Id factor
    And primary ("^" factor @2pow)?
      Id primary
      Opt ("^" factor @2pow)?
        And "^" factor @2pow
          Char "^"
          Id factor
          Act @2pow
  Rule primary = number / "(" exp ")"
    Id primary
    Or number / "(" exp ")"
      Id number
      And "(" exp ")"
        Char "("
        Id exp
        Char ")"
  Rule number = digit+ @number
    Id number
    And digit+ @number
      Some digit+
        Id digit
      Act @number
  Rule digit = '0123456789'
    Id digit
    Set '0123456789'
  Empty
==========
-- Unknown rule name
x = z
y = "a"
..........
Error in tests/Binder.txt, line 236: undefined identifier
x = z
    ^
==========
-- Duplicate rule name
x = "x"
y = "y"
x = "z"
..........
Error in tests/Binder.txt, line 246: x is already defined
x = "z"
^
==========
-- Error markers
string = '"' visible* #badstring '"'
visible = "x"
..........
List string = '"' visible* #badstring '"'...
  Rule string = '"' visible* #badstring '"'
    Id string
    And '"' visible* #badstring '"'
      Char '"'
      Any visible*
        Id visible
      Mark #badstring
      Char '"'
  Rule visible = "x"
    Id visible
    Char "x"
  Empty
==========
-- Unicode category
upper = Lu
..........
List upper = Lu...
  Rule upper = Lu
    Id upper
    Cat Lu
  Empty
==========
-- Attempt to redefine category
Lu = 'x'
..........
Error in tests/Binder.txt, line 280: expecting id, newline
Lu = 'x'
^
==========
-- Number too big
big = 1114112
..........
Error in tests/Binder.txt, line 287: code too big
big = 1114112
      ^^^^^^^
==========
-- Empty string, set, splitter
x = "" '' <>
..........
List x = "" '' <>...
  Rule x = "" '' <>
    Id x
    And "" '' <>
      Success ""
      Fail ''
      Eot <>
  Empty
==========
-- Singleton string or set becomes Char
x = "a" 'b'
..........
List x = "a" 'b'...
  Rule x = "a" 'b'
    Id x
    And "a" 'b'
      Char "a"
      Char 'b'
  Empty
==========
-- Unnamed action becomes Drop
x = @ @1 @2 @3
..........
List x = @ @1 @2 @3...
  Rule x = @ @1 @2 @3
    Id x
    And @ @1 @2 @3
      Drop @
      Drop @1
      Drop @2
      Drop @3
  Empty
==========
-- Text and tokens
x = "a" %b
..........
Error in tests/Binder.txt, line 330: undefined identifier
x = "a" %b
    ^^^
