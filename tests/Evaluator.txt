{sum1.txt}
==========
{sum2.txt}
==========
{sum3.txt}
==========
{sum4.txt}
==========
{sum5.txt}
==========
{sum6.txt}
==========
{sum7.txt}
==========
{sum8.txt}
==========
{sum9.txt}
==========
{sum10.txt}
==========
{sum11.txt}
==========
{sum12.txt}
==========
{sum13.txt}
==========
{sum14.txt}
==========
{sum15.txt}
==========
{sum16.txt}
==========
{sum17.txt}
==========
-- See succeeds
dots = ['.' '.'] @dots / '.' '3' @num
==========
..
..........
dots ..
==========
-- See fails
dots = ['.' '.'] @dots / '.' '3' @num
==========
.3
..........
num .3
==========
-- String has a built-in lookahead
op = "<=" @le / "<" @lt
==========
x
..........
Error in tests/Evaluator.txt, line 52:
x
^
==========
<=
..........
le <=
==========
<
..........
lt <
==========
-- Error marker not reached
tokens = @tokens (token @2add)+ end
token = "x" @x / "y" @y / #err "z" @z
end = #newline '\13'? '\10' @
==========
xyx
..........
tokens
x x
add
y y
add
x x
add
==========
-- Error marker reached, but no error
tokens = @tokens (token @2add)+ end
token = "x" @x / "y" @y / #err "z" @z
end = #newline '\13'? '\10' @
==========
z
..........
tokens
z z
add
==========
-- Error marker reached, and reported
tokens = @tokens (token @2add)+ end
token = "x" @x / "y" @y / #err "z" @z
end = #newline '\13'? '\10' @
==========

..........
Error in tests/Evaluator.txt, line 97: expecting err

^
==========
-- Category succeeds or fails
token = Ll @letter
==========
x
..........
letter x
==========
X
..........
Error in tests/Evaluator.txt, line 110:
X
^
==========
-- Scanner
tokens = @tokens token+
token = Ll @1lower / Lu @1upper
==========
xYz
..........
tokens
lower x
upper Y
lower z
==========
-- Token parser using tags
sum = %num @num (%plus @ %num @num @2add)*
==========
id
..........
Error in tests/Evaluator.txt, line 130:
id
^
==========
num plus num
..........
num
num
add
==========
calculator = sum end
sum = term ("+" @ term @2add / "-" @ term @2subtract)*
term = atom ("*" @ atom @2multiply / "/" @ atom @2divide)*
atom = number / "(" @ sum ")" @
number = ('0..9')+ @number
end = '\13'? '\10' @
==========
2+2
..........
number 2
number 2
add
==========
x = 'x' end @x
end = #end <>
==========
x
..........
Error in tests/Evaluator.txt, line 158: expecting end
x
 ^
==========
x%
..........
Error in tests/Evaluator.txt, line 164: expecting end
x%
 ^
==========
-- An action at the start of a left hand alternative happens whether the
-- alternative is chosen or not
test = @left "0" / @right "1"
==========
0
..........
left
==========
1
..........
left
right
==========
-- Test category recognition
ch = Ll @letter
==========
x
..........
letter x
==========
9
..........
Error in tests/Evaluator.txt, line 190:
9
^
==========
-- First rule not producing a single result (allowed during testing).
x = 'a' @one @two
==========
a
..........
one a
two
==========
-- First rule underflows the output stack (allowed during testing).
x = 'a' @1one
==========
a
..........
one a
==========
-- Escapes in input
x = 'a' @1one
==========
\97
..........
one a
==========
-- Escapes in input (escape at end of line cancels newline)
x = "a\rb" @1one
==========
\97\13
b
..........
one a\13b
