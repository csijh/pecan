-- Simple case of one output item
x = @Id @
----------
List x = @Id @...
  Rule x = @Id @ NET=1
    Id x NET=1
    And @Id @ NET=1
      Act @Id NET=1
      Drop @
  Empty
==========
-- Well-formed but 'non-terminating' grammar
x = 'a' x @b
----------
Error in tests/Stacker.txt, line 13: variable net output
x = 'a' x @b
^
==========
-- Low water mark continually decreasing
x = 'a' / 'b' @2c x @d
----------
Error in tests/Stacker.txt, line 20: outputs may underflow
x = 'a' / 'b' @2c x @d
^^^^^^^^^^^^^^^^^^^^^^
==========
-- Choices disagree
x = @1a / @2b
----------
Error in tests/Stacker.txt, line 27: alternatives have different net outputs
x = @1a / @2b
    ^^^^^^^^^
==========
-- Choice
exp = 'a' @NUM / "(" @OPEN exp ")" @CLOSE @3EXP
----------
List exp = 'a' @NUM / "(" @OPEN exp ")" @CLOSE @3EXP...
  Rule exp = 'a' @NUM / "(" @OPEN exp ")" @CLOSE @3EXP NET=1
    Id exp NET=1
    Or 'a' @NUM / "(" @OPEN exp ")" @CLOSE @3EXP NET=1
      And 'a' @NUM NET=1
        Char 'a'
        Act @NUM NET=1
      And "(" @OPEN exp ")" @CLOSE @3EXP NET=1
        Char "("
        Act @OPEN NET=1
        Id exp NET=1
        Char ")"
        Act @CLOSE NET=1
        Act @3EXP NEED=3,NET=-2
  Empty
==========
-- Expressions
sum = exp
exp = term ("+" term @2add / "-" term @2sub)*
term = factor ("*" factor @2mul / "/" factor @2div)*
factor = primary ("^" factor @2pow)?
primary = number / "(" exp ")"
number = digit+ @number
digit = '0..9'
----------
List sum = exp...
  Rule sum = exp NET=1
    Id sum NET=1
    Id exp NET=1
  Rule exp = term ("+" term @2add / "-" term @2sub)* NET=1
    Id exp NET=1
    And term ("+" term @2add / "-" term @2sub)* NET=1
      Id term NET=1
      Any ("+" term @2add / "-" term @2sub)* NEED=1
        Or "+" term @2add / "-" term @2sub NEED=1
          And "+" term @2add NEED=1
            Char "+"
            Id term NET=1
            Act @2add NEED=2,NET=-1
          And "-" term @2sub NEED=1
            Char "-"
            Id term NET=1
            Act @2sub NEED=2,NET=-1
  Rule term = factor ("*" factor @2mul / "/" factor @2div)* NET=1
    Id term NET=1
    And factor ("*" factor @2mul / "/" factor @2div)* NET=1
      Id factor NET=1
      Any ("*" factor @2mul / "/" factor @2div)* NEED=1
        Or "*" factor @2mul / "/" factor @2div NEED=1
          And "*" factor @2mul NEED=1
            Char "*"
            Id factor NET=1
            Act @2mul NEED=2,NET=-1
          And "/" factor @2div NEED=1
            Char "/"
            Id factor NET=1
            Act @2div NEED=2,NET=-1
  Rule factor = primary ("^" factor @2pow)? NET=1
    Id factor NET=1
    And primary ("^" factor @2pow)? NET=1
      Id primary NET=1
      Opt ("^" factor @2pow)? NEED=1
        And "^" factor @2pow NEED=1
          Char "^"
          Id factor NET=1
          Act @2pow NEED=2,NET=-1
  Rule primary = number / "(" exp ")" NET=1
    Id primary NET=1
    Or number / "(" exp ")" NET=1
      Id number NET=1
      And "(" exp ")" NET=1
        Char "("
        Id exp NET=1
        Char ")"
  Rule number = digit+ @number NET=1
    Id number NET=1
    And digit+ @number NET=1
      Some digit+
        Id digit
      Act @number NET=1
  Rule digit = '0..9'
    Id digit
    Range '0..9'
  Empty
