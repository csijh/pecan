// Numbers reported are NET effect on output stack and LOW water mark.
// Simple case of one output item
x = @Id @
----------
Rule x 1,0
  And @Id @ 1,0
    Act @Id 1,0
    Drop @ 0,0
==========
// Two items
x = @Id @Id @1add
----------
Error on line 2: parser produces 2 output items, not 1
x = @Id @Id @1add
^
==========
// Well-formed but non-terminating grammar
x = 'a' x @b
----------
Error on line 2: unable to calculate number of output items produced
x = 'a' x @b
        ^
==========
// Low water mark continually decreasing
x = 'a' @a / 'b' @2c x @d
----------
Error on line 2: outputs may underflow
x = 'a' @a / 'b' @2c x @d
^
==========
// Choice
exp = 'a' @NUM / "(" @OPEN exp ")" @CLOSE @3EXP
----------
Rule exp 1,0
  Or 'a' @NUM / "(" @OPEN exp ")" @CLOSE @3EXP 1,0
    And 'a' @NUM 1,0
      Set 'a' 0,0
      Act @NUM 1,0
    And "(" @OPEN exp ")" @CLOSE @3EXP 1,0
      String "(" 0,0
      Act @OPEN 1,0
      Id exp 1,0
      String ")" 0,0
      Act @CLOSE 1,0
      Act @3EXP -2,-3
==========
// Expressions
sum = exp
exp = term ("+" term @2add / "-" term @2sub)*
term = factor ("*" factor @2mul / "/" factor @2div)*
factor = primary ("^" factor @2pow)?
primary = number / "(" exp ")"
number = digit+ @number
digit = "0" .. "9"
----------
Rule sum 1,0
  Id exp 1,0
Rule exp 1,0
  And term ("+" term @2add / "-" term @2sub)* 1,0
    Id term 1,0
    Many ("+" term @2add / "-" term @2sub)* 0,-1
      Or "+" term @2add / "-" term @2sub 0,-1
        And "+" term @2add 0,-1
          String "+" 0,0
          Id term 1,0
          Act @2add -1,-2
        And "-" term @2sub 0,-1
          String "-" 0,0
          Id term 1,0
          Act @2sub -1,-2
Rule term 1,0
  And factor ("*" factor @2mul / "/" factor @2div)* 1,0
    Id factor 1,0
    Many ("*" factor @2mul / "/" factor @2div)* 0,-1
      Or "*" factor @2mul / "/" factor @2div 0,-1
        And "*" factor @2mul 0,-1
          String "*" 0,0
          Id factor 1,0
          Act @2mul -1,-2
        And "/" factor @2div 0,-1
          String "/" 0,0
          Id factor 1,0
          Act @2div -1,-2
Rule factor 1,0
  And primary ("^" factor @2pow)? 1,0
    Id primary 1,0
    Opt ("^" factor @2pow)? 0,-1
      And "^" factor @2pow 0,-1
        String "^" 0,0
        Id factor 1,0
        Act @2pow -1,-2
Rule primary 1,0
  Or number / "(" exp ")" 1,0
    Id number 1,0
    And "(" exp ")" 1,0
      String "(" 0,0
      Id exp 1,0
      String ")" 0,0
Rule number 1,0
  And digit+ @number 1,0
    Some digit+ 0,0
      Id digit 0,0
    Act @number 1,0
Rule digit 0,0
  Range "0" .. "9" 0,0
    String "0" 0,0
    String "9" 0,0
